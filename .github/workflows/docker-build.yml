name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - roman-CEC-35-create-cd

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Run ESLint
  #       run: npm run eslint

  build-and-push:
    # needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set repository owner to lowercase
        run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Bump patch version in package.json
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          BASE=$(echo "$CURRENT_VERSION" | cut -d. -f1-2)
          PATCH=$(echo "$CURRENT_VERSION" | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$BASE.$NEW_PATCH"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
          jq --arg v "$NEW_VERSION" '.version = $v' package.json > tmp.json && mv tmp.json package.json
          echo "Bumped version: $NEW_VERSION"

      - name: Commit and push updated package.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json
          git commit -m "Bump version to v${VERSION} [skip ci]" || echo "Nothing to commit"
          git push

      - name: Auto-tag commit if not already tagged
        run: |
          TAG="v${VERSION}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag "$TAG"
            git push origin "$TAG"
            echo "Created and pushed tag $TAG"
          fi

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Install Docker Compose
        run: sudo apt-get install docker-compose -y

      - name: Build Docker images
        run: |
          docker build -t ghcr.io/${{ env.REPO_OWNER }}/${{ github.event.repository.name }}:latest .

      - name: Tag Docker image with version
        run: |
          docker tag ghcr.io/${{ env.REPO_OWNER }}/${{ github.event.repository.name }}:latest \
            ghcr.io/${{ env.REPO_OWNER }}/${{ github.event.repository.name }}:v${{ env.VERSION }}


  
      - name: Push Docker images
        run: |
          docker push ghcr.io/${{ env.REPO_OWNER }}/${{ github.event.repository.name }}:v${{ env.VERSION }}
          docker push ghcr.io/${{ env.REPO_OWNER }}/${{ github.event.repository.name }}:latest
